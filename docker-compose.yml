version: '2'

services:

  phpunit:
    build: docker/phpunit
    volumes: 
      - .:/app
  composer:
    build: docker/composer
    environment:
      COMPOSER_CACHE_DIR: /tmp/cache
  mysql0:
    image: mysql:5.7
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./data/:/data/
      - ./docker/mysql0/custom-entrypoint.sh:/custom-entrypoint.sh
      - ./db-structure.sql:/docker-entrypoint-initdb.d/01-init.sql

  web0:
    build: docker/web0
    ports:
      - "80:80"
    volumes: 
      - ./public_html:/var/www/html/
      - ./docker/web0/conf/ssl/ssl-cert-snakeoil.pem:/etc/ssl/certs/ssl-cert-snakeoil.pem
      - ./docker/web0/conf/ssl/ssl-cert-snakeoil.key:/etc/ssl/private/ssl-cert-snakeoil.key
      - ./docker/web0/filesystem/var/www/html/.htaccess:/var/www/html/.htaccess
      - ./docker/web0/filesystem/var/www/html/application/config/database.php:/var/www/html/application/config/database.php
      - ./src/ci/controllers/:/var/www/html/application/controllers/
      - ./src/ci/models/:/var/www/html/application/models/
      - ./src/ci/views/:/var/www/html/application/views/
      - ./src/ci/config/routes.php:/var/www/html/application/config/routes.php
    depends_on:
      - mysql0
    env_file: .env
    environment:
      # only for first installation - if someone uses docker-compose up instead of bin/console.sh install
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_HOST: mysql0
